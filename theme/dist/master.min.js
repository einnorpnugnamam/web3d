/*!
 * [3D Web]
 */
var LOAD=function(){"use strict";function e(){$(".main .home").length>0&&home.init(),three.init()}return{init:e}}();jQuery(document).ready(function(e){LOAD.init()});var home={init:function(){home.activateEventHandler()},activateEventHandler:function(){}},three={init:function(){const e=new THREE.Scene,t=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),n=new THREE.WebGLRenderer;n.setClearColor("#e5e5e5"),n.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(n.domElement);var i=new THREE.OrbitControls(t,n.domElement);t.position.set(0,10,20),three.gltfLoader(e,t,i);const o=function(){if(three.resizeRendererToDisplaySize(n)){console.log("foo");const r=n.domElement;t.aspect=r.clientWidth/r.clientHeight,t.updateProjectionMatrix()}n.render(e,t),requestAnimationFrame(o),i.update()};o(),three.activateEventHandler(n,t)},activateEventHandler:function(e,t){window.addEventListener("resize",function(){e.setSize(window.innerWidth,window.innerHeight),t.aspect=window.innerWidth/window.innerHeight,t.updateProjectionMatrix()})},resizeRendererToDisplaySize:function(e){const t=e.domElement,n=t.clientWidth,i=t.clientHeight,o=t.width!==n||t.height!==i;return o&&e.setSize(n,i,!1),o},gltfLoader:function(e,t,n){const i=10066329,o=16777215,r=1;var a=new THREE.HemisphereLight(i,o,r);e.add(a);const c=16777215;a=new THREE.DirectionalLight(c,r),a.position.set(5,10,2),e.add(a),e.add(a.target);const d=new THREE.GLTFLoader,s=new THREE.DRACOLoader;s.setDecoderPath("/img/"),d.setDRACOLoader(s),d.load("./theme/img/scene.gltf",function(i){console.log(i.parser),e.add(i.scene);const o=(new THREE.Box3).setFromObject(i.scene),r=o.getSize(new THREE.Vector3).length(),a=o.getCenter(new THREE.Vector3);three.frameArea(.5*r,r,a,t),n.maxDistance=10*r,n.target.copy(a)},function(e){},function(e){console.log("An error happened")})},frameArea:function(e,t,n,i){const o=.5*e,r=THREE.MathUtils.degToRad(.5*i.fov),a=o/Math.tan(r),c=(new THREE.Vector3).subVectors(i.position,n).multiply(new THREE.Vector3(0,4,(-2))).normalize();i.position.copy(c.multiplyScalar(2.5*a).add(n)),i.near=t/100,i.far=100*t,i.updateProjectionMatrix(),i.lookAt(n.x,n.y,n.z)}};